// Mocks generated by Mockito 5.4.5 from annotations
// in smart_sync/test/smart_sync_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smart_sync/src/adapters/local_adapter.dart' as _i2;
import 'package:smart_sync/src/adapters/remote_adapter.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAdapter extends _i1.Mock implements _i2.LocalAdapter {
  MockLocalAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<dynamic> create(
    String? collection,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [
            collection,
            data,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> read(
    String? collection,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [
            collection,
            id,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<List<dynamic>> readAll(String? collection) => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [collection],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<dynamic> update(
    String? collection,
    String? id,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            collection,
            id,
            data,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<void> delete(
    String? collection,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            collection,
            id,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clear(String? collection) => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [collection],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [RemoteAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteAdapter extends _i1.Mock implements _i4.RemoteAdapter {
  MockRemoteAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<dynamic> create(
    String? collection,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [
            collection,
            data,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> read(
    String? collection,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [
            collection,
            id,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<List<dynamic>> readAll(String? collection) => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [collection],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<dynamic> update(
    String? collection,
    String? id,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            collection,
            id,
            data,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<void> delete(
    String? collection,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            collection,
            id,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
